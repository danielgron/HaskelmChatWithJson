var _user$project$Main$encodeChat = function (chatMessage) {
	return A2(
		_elm_lang$core$Json_Encode$encode,
		4,
		_elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'command',
					_1: _elm_lang$core$Json_Encode$string(chatMessage.command)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'content',
						_1: _elm_lang$core$Json_Encode$string(chatMessage.content)
					},
					_1: {ctor: '[]'}
				}
			}));
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {chatMessage: a, userMessage: b, userName: c};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A3(_user$project$Main$Model, '', '', ''),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$ChatMessage = F2(
	function (a, b) {
		return {command: a, content: b};
	});
var _user$project$Main$decodeChat = A3(
	_elm_lang$core$Json_Decode$map2,
	_user$project$Main$ChatMessage,
	A2(_elm_lang$core$Json_Decode$field, 'command', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'content', _elm_lang$core$Json_Decode$string));
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'PostChatMessage':
				if (_elm_lang$core$String$isEmpty(model.userName)) {
					var message = model.userMessage;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{userMessage: '', userName: message}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$websocket$WebSocket$send,
								'ws://localhost:3000/',
								_user$project$Main$encodeChat(
									A2(_user$project$Main$ChatMessage, 'login', message))),
							_1: {ctor: '[]'}
						});
				} else {
					var message = model.userMessage;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{userMessage: ''}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$websocket$WebSocket$send,
								'ws://localhost:3000/',
								_user$project$Main$encodeChat(
									A2(_user$project$Main$ChatMessage, 'message', message))),
							_1: {ctor: '[]'}
						});
				}
			case 'UpdateUserMessage':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{userMessage: _p0._0}),
					{ctor: '[]'});
			case 'NewChatMessage':
				var _p1 = A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$decodeChat, _p0._0);
				if (_p1.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{userMessage: _p1._0}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{chatMessage: _p1._0.content}),
						{ctor: '[]'});
				}
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{chatMessage: 'bummer'}),
					{ctor: '[]'});
		}
	});
var _user$project$Main$NewUser = function (a) {
	return {ctor: 'NewUser', _0: a};
};
var _user$project$Main$NewChatMessage = function (a) {
	return {ctor: 'NewChatMessage', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$websocket$WebSocket$listen, 'ws://localhost:3000', _user$project$Main$NewChatMessage);
};
var _user$project$Main$UpdateUserMessage = function (a) {
	return {ctor: 'UpdateUserMessage', _0: a};
};
var _user$project$Main$PostChatMessage = {ctor: 'PostChatMessage'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('message...'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$autofocus(true),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(model.userMessage),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UpdateUserMessage),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$PostChatMessage),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Submit'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(model.chatMessage),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
